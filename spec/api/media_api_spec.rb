=begin
#Phone.com API

#This is a Phone.com api Swagger definition

OpenAPI spec version: 1.0.0
Contact: apisupport@phone.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::MediaApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MediaApi' do
  before do
    # run before each test
    @instance = SwaggerClient::MediaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MediaApi' do
    it 'should create an instance of MediaApi' do
      expect(@instance).to be_instance_of(SwaggerClient::MediaApi)
    end
  end

  # unit tests for create_account_media_files
  # Add a media object to your account that can be used as a greeting or hold music. Users may create a media by using the built-in Text-to-speech (TTS) facility or upload a file of their choice. (Note: The maximum size for media files or JSON objects included with a POST or PUT request is 10 MB)
  # See Account Media for more info on the properties.
  # @param account_id Account ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :json Media extra parameters
  # @option opts [File] :file Media file
  # @return [MediaFull]
  describe 'create_account_media_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_account_media_tts
  # Add a media object to your account that can be used as a greeting or hold music. Users may create a media by using the built-in Text-to-speech (TTS) facility or upload a file of their choice. (Note: The maximum size for media files or JSON objects included with a POST or PUT request is 10 MB)
  # See Account Media for more info on the properties.
  # @param account_id Account ID
  # @param [Hash] opts the optional parameters
  # @option opts [CreateMediaParams] :data Media data
  # @return [MediaFull]
  describe 'create_account_media_tts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_account_media
  # Delete an individual media record
  # See Account Media for more info on the properties.
  # @param account_id Account ID
  # @param media_id Media ID
  # @param [Hash] opts the optional parameters
  # @return [DeleteEntry]
  describe 'delete_account_media test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_media
  # Show details of an individual media recording (Greeting or Hold Music)
  # Get individual media recording
  # @param account_id Account ID
  # @param media_id Media ID
  # @param [Hash] opts the optional parameters
  # @return [MediaFull]
  describe 'get_account_media test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_account_media
  # Get a list of media recordings for an account.
  # Get a list of media recordings for an account. See Account Media for more info on the properties. Note: This API is for users with Account Owner scope access token. Users with Extension User scope token should invoke the Extension level List Media API with the following definition: GET https://api.phone.com/v4/accounts/:account_id/extensions/:extension_id/media
  # @param account_id Account ID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :filters_id ID filter
  # @option opts [Array<String>] :filters_name Name filter
  # @option opts [String] :sort_id ID sorting
  # @option opts [String] :sort_name Name sorting
  # @option opts [Integer] :limit Max results
  # @option opts [Integer] :offset Results to skip
  # @option opts [String] :fields Field set
  # @return [ListMedia]
  describe 'list_account_media test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_account_media_files
  # Update a media object to your account. Note: The maximum size for media files or JSON objects included with a POST or PUT request is 10 MB.
  # See Account Media for more info on the properties.
  # @param account_id Account ID
  # @param media_id Media ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :json Media extra parameters
  # @option opts [File] :file Media file
  # @return [MediaFull]
  describe 'replace_account_media_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_account_media_tts
  # Update a media object to your account.
  # Update a media object to your account. Note: The maximum size for media files or JSON objects included with a POST or PUT request is 10 MB. See Account Media for more info on the properties. Note: This API is for users with Account Owner scope access token. Users with Extension User scope token should invoke the Extension level Replace Media API with the following definition: PUT https://api.phone.com/v4/accounts/:account_id/extensions/:extension_id/media/:media_id
  # @param account_id Account ID
  # @param media_id Media ID
  # @param [Hash] opts the optional parameters
  # @option opts [CreateMediaParams] :data Media data
  # @return [MediaFull]
  describe 'replace_account_media_tts test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
